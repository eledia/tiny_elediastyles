define("tiny_elediastyles/plugin",["exports","editor_tiny/loader","editor_tiny/utils","./common","./options","./commands","./configuration"],(function(_exports,_loader,_utils,_common,_options,_commands,Configuration){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,Configuration=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}
/**
   * Tiny tiny_elediastyles for Moodle.
   *
   * @module      tiny_elediastyles
   * @copyright   2025 Alex Schander <alexander.schander@eledia.de>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */(Configuration);var _default=new Promise((resolve=>{Promise.all([(0,_loader.getTinyMCE)(),(0,_utils.getPluginMetadata)(_common.component,_common.pluginName),(0,_commands.getSetup)()]).then((_ref=>{let[tinyMCE,pluginMetadata,setupCommands]=_ref;tinyMCE.PluginManager.add(_common.pluginName,(editor=>((0,_options.register)(editor),setupCommands(editor),editor.on("init",(()=>{(editor=>{try{const doc=editor.getDoc();if(!doc||!doc.head)return;const links=Array.from(doc.querySelectorAll('link[rel="stylesheet"]')),editorLink=links.find((l=>l&&"string"==typeof l.href&&/\/theme\/styles\.php\/[^/]+\/[^/]+\/editor$/.test(l.href)));if(!editorLink)return void console.warn("[tiny_elediastyles] No editor stylesheet found in the iframe.");const allHref=editorLink.href.replace(/\/editor$/,"/all");if(links.some((l=>l&&l.href===allHref)))return;const link=doc.createElement("link");link.rel="stylesheet",link.href=allHref,doc.head.appendChild(link),console.log("[tiny_elediastyles] Injected theme ALL CSS into Tiny iframe:",allHref)}catch(e){console.error("[tiny_elediastyles] injectThemeAllCss error:",e)}})(editor)})),pluginMetadata))),resolve([_common.pluginName,Configuration])})).catch((error=>{window.console.error("Error during plugin setup:",error),resolve([_common.pluginName,Configuration])}))}));return _exports.default=_default,_exports.default}));

//# sourceMappingURL=plugin.min.js.map