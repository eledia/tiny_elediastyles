{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Tiny tiny_elediastyles for Moodle.\n *\n * @module      tiny_elediastyles\n * @copyright   2025 Alex Schander <alexander.schander@eledia.de>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { getPluginOptionName } from 'editor_tiny/options';\nimport { pluginName } from './common';\n\n// Helper variables for the option names.\nconst jsonDefinitionList = getPluginOptionName(pluginName, 'jsonDefinition');\nconst cssDefinitionList = getPluginOptionName(pluginName, 'cssDefinition');\nconst externalCssUrlOption = getPluginOptionName(pluginName, 'externalCssUrl');\nconst useExternalCssOption = getPluginOptionName(pluginName, 'useExternalCss');\nconst showClearButtonOption = getPluginOptionName(pluginName, 'showclearbutton');\n/**\n * Options registration function.\n *\n * @param {TinyMCE.Editor} editor\n */\nexport const register = (editor) => {\n    // For each option, register it with the editor.\n    // Valid type are defined in https://www.tiny.cloud/docs/tinymce/6/apis/tinymce.editoroptions/\n    editor.options.register(jsonDefinitionList, {\n        processor: 'Array',\n    });\n    editor.options.register(cssDefinitionList, {\n        processor: 'Array',\n    });\n    editor.options.register(externalCssUrlOption, {\n        processor: 'string'\n    });\n    editor.options.register(useExternalCssOption, {\n        processor: 'boolean'\n    });\n        editor.options.register(showClearButtonOption, {\n        processor: 'boolean'\n    });\n};\n\n\n/**\n * @param {TinyMCE.Editor} editor The editor instance to fetch the value for\n * @returns {array} The value of the jsonDefinition option\n */\nexport const getjsonDefinition = (editor) => editor.options.get(jsonDefinitionList);\n\n/**\n * @param {TinyMCE.Editor} editor The editor instance to fetch the value for\n * @returns {array} The value of the jsonDefinition option\n */\nexport const getCssDefinition = (editor) => editor.options.get(cssDefinitionList);\n\n/**\n * @param {TinyMCE.Editor} editor\n * @returns {string} External CSS URL (may be empty)\n */\nexport const getExternalCssUrl = (editor) => editor.options.get(externalCssUrlOption) || '';\n\n/**\n * @param {TinyMCE.Editor} editor\n * @returns {boolean} Whether to load the external CSS\n */\nexport const getUseExternalCss = (editor) => !!editor.options.get(useExternalCssOption);\n\n/**\n * @param {TinyMCE.Editor} editor\n * @returns {boolean} Whether to show button next to dropdown or in the dropdown\n */\nexport const getShowClearButtonOption = (editor) => !!editor.options.get(showClearButtonOption);"],"names":["jsonDefinitionList","pluginName","cssDefinitionList","externalCssUrlOption","useExternalCssOption","showClearButtonOption","editor","options","register","processor","get"],"mappings":";;;;;;;;MA2BMA,oBAAqB,gCAAoBC,mBAAY,kBACrDC,mBAAoB,gCAAoBD,mBAAY,iBACpDE,sBAAuB,gCAAoBF,mBAAY,kBACvDG,sBAAuB,gCAAoBH,mBAAY,kBACvDI,uBAAwB,gCAAoBJ,mBAAY,qCAMrCK,SAGrBA,OAAOC,QAAQC,SAASR,mBAAoB,CACxCS,UAAW,UAEfH,OAAOC,QAAQC,SAASN,kBAAmB,CACvCO,UAAW,UAEfH,OAAOC,QAAQC,SAASL,qBAAsB,CAC1CM,UAAW,WAEfH,OAAOC,QAAQC,SAASJ,qBAAsB,CAC1CK,UAAW,YAEXH,OAAOC,QAAQC,SAASH,sBAAuB,CAC/CI,UAAW,wCASeH,QAAWA,OAAOC,QAAQG,IAAIV,8CAM/BM,QAAWA,OAAOC,QAAQG,IAAIR,8CAM7BI,QAAWA,OAAOC,QAAQG,IAAIP,uBAAyB,8BAMvDG,UAAaA,OAAOC,QAAQG,IAAIN,wDAMzBE,UAAaA,OAAOC,QAAQG,IAAIL"}